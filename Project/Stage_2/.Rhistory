performance(forest.perf)
performance(svm.perf)
set.seed(123)
reg1 <- glm(Action_Taken ~ DTI_Housing + DTI_Total + Race + Self_Employed + Marital_Status +
School, data = Mortgagestats, family = "binomial")
cv.reg1 <- cv.glm(Mortgagestats, reg1, K = 10)$delta[2]
reg2 <- glm(Action_Taken ~ Loan_Amount + Race + Sex + Income_Thousands + Marital_Status +
Self_Employed + Purchase_Price + Mortgage_Credit_History + DTI_Housing +
DTI_Total + School, data = Mortgagestats, family = "binomial")
cv.reg2 <- cv.glm(Mortgagestats, reg2, K = 10)$delta[2]
reg3 <- glm(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex + Income_Thousands +
Marital_Status + Self_Employed + Mortgage_Credit_History + DTI_Housing +
DTI_Total + School, data = Mortgagestats, family = "binomial")
cv.reg3 <- cv.glm(Mortgagestats, reg3, K = 10)$delta[2]
reg4 <- step(reg3)
cv.reg4 <- cv.glm(Mortgagestats, reg4, K = 10)$delta[2]
reg5 <- glm(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex + Income_Thousands +
Marital_Status + Self_Employed + Mortgage_Credit_History +
DTI_Housing + DTI_Total + School + (Income_Thousands)^2,
data = Mortgagestats, family = "binomial")
cv.reg5 <- cv.glm(Mortgagestats, reg5, K = 10)$delta[2]
reg6 <- step(reg5)
cv.reg6 <- cv.glm(Mortgagestats, reg6, K = 10)$delta[2]
cv.reg1
cv.reg2
cv.reg3
cv.reg4
cv.reg5
cv.reg6
hist(Mortgagestats$Loan_Amount, breaks = "fd", xlab = "Loan Amount(Thousands)")
hist(Mortgagestats$Income_Thousands, breaks = "fd", xlab = "Income(Thousands)")
hist(Mortgagestats$Purchase_Price, breaks = "fd", xlab = "Purchase Price(Thousands)")
hist(Mortgagestats$DTI_Housing, breaks = "fd", xlab = "Debt to Income, Housing Debt")
hist(Mortgagestats$DTI_Total, breaks = "fd", xlab = "Debt to Income, Total Debt")
hist(Mortgagestats$School, breaks = "fd",xlab = "Years of Education")
hist((Loan_Amount/Purchase_Price), breaks = "fd", xlab = "Loan to Purchase Price Ratio")
set.seed(1234)
reg.svm <- svm(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex +
Marital_Status + Self_Employed + Mortgage_Credit_History +
DTI_Housing + DTI_Total + School, data=Mortgagestats)
svm.pred <- predict(reg.svm, Mortgagestats)
svm.perf <- table(Mortgagestats$Action_Taken, svm.pred, dnn = c("Actual","Predicted"))
svm.perf
hist(Mortgagestats$Loan_Amount, breaks = "fd", xlab = "Loan Amount(Thousands)")
hist(Mortgagestats$Income_Thousands, breaks = "fd", xlab = "Income(Thousands)")
hist(Mortgagestats$Purchase_Price, breaks = "fd", xlab = "Purchase Price(Thousands)")
hist(Mortgagestats$DTI_Housing, breaks = "fd", xlab = "Debt to Income, Housing Debt")
hist(Mortgagestats$DTI_Total, breaks = "fd", xlab = "Debt to Income, Total Debt")
hist(Mortgagestats$School, breaks = "fd",xlab = "Years of Education")
hist((Mortgagestats$Loan_Amount/Mortgagestats$Purchase_Price), breaks = "fd", xlab = "Loan to Purchase Price Ratio", main = "Histogram of Loan Amount to Purchase Price ratio")
reg2 <- glm(Action_Taken ~ log(Loan_Amount) + Race + Sex + Income_Thousands + Marital_Status +
Self_Employed + Purchase_Price + Mortgage_Credit_History + DTI_Housing +
DTI_Total + School, data = Mortgagestats, family = "binomial")
reg2 <- glm(Action_Taken ~ Loan_Amount + Race + Sex + Income_Thousands + Marital_Status +
Self_Employed + log(Purchase_Price) + Mortgage_Credit_History + DTI_Housing +
DTI_Total + School, data = Mortgagestats, family = "binomial")
reg2 <- glm(Action_Taken ~ Loan_Amount + Race + Sex + Income_Thousands + Marital_Status +
Self_Employed + log(Purchase_Price) + Mortgage_Credit_History + DTI_Housing +
DTI_Total + School, data = Mortgagestats, family = "binomial")
set.seed(123)
reg1 <- glm(Action_Taken ~ DTI_Housing + DTI_Total + Race + Self_Employed + Marital_Status +
School, data = Mortgagestats, family = "binomial")
cv.reg1 <- cv.glm(Mortgagestats, reg1, K = 10)$delta[2]
reg2 <- glm(Action_Taken ~ Loan_Amount + Race + Sex + Income_Thousands + Marital_Status +
Self_Employed + log(Purchase_Price) + Mortgage_Credit_History + DTI_Housing +
DTI_Total + School, data = Mortgagestats, family = "binomial")
performance(reg.perf1)
performance(reg.perf2)
performance(reg.perf3)
performance(forest.perf)
performance(svm.perf)
reg.forest$AUC
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(pROC)
library(gamlr)
library(boot)
library(randomForest)
library(e1071)
Mortgagestats <- read_csv("Data/hmda_sw.csv",show_col_types = FALSE)
Mortgagestats <- Mortgagestats[c(5,6,9,11,13,20,24,30,36,39,40,59)]
# s6, s7, s13, s15, s17, s23a, s27a, s33,s42, s45, S46, school
Coln = c("Loan_Amount", "Action_Taken", "Race","Sex", "Income_Thousands", "Marital_Status", "Self_Employed", "Purchase_Price", "Mortgage_Credit_History", "DTI_Housing", "DTI_Total", "School")
colnames(Mortgagestats) <- Coln
Mortgagestats[Mortgagestats == 999999.4] <- NA
Mortgagestats <- na.omit(Mortgagestats)
Mortgagestats$Race <- factor(Mortgagestats$Race, levels = c(3,5),labels = c(0,1))
Mortgagestats$Action_Taken <- factor(Mortgagestats$Action_Taken, levels = c(1,2,3), labels = c(1,1,0))
Mortgagestats$Sex <- factor(Mortgagestats$Sex, levels = c(1,2,3), labels = c(1,0,1))
Mortgagestats$Marital_Status <- factor(Mortgagestats$Marital_Status)
Mortgagestats$Mortgage_Credit_History <- factor(Mortgagestats$Mortgage_Credit_History)
Mortgagestats$DTI_Housing <- Mortgagestats$DTI_Housing/100
Mortgagestats$DTI_Total <- Mortgagestats$DTI_Total/100
summary(Mortgagestats)
sd(Mortgagestats$Loan_Amount, na.rm = TRUE)
sd(Mortgagestats$Income_Thousands, na.rm =TRUE)
sd(Mortgagestats$Purchase_Price, na.rm = TRUE)
sd(Mortgagestats$DTI_Housing, na.rm = TRUE)
sd(Mortgagestats$DTI_Total, na.rm = TRUE)
sd(Mortgagestats$School, na.rm = TRUE)
cordata <-Mortgagestats
cordata$Action_Taken <- as.numeric(levels(cordata$Action_Taken))[cordata$Action_Taken]
cordata$Race <- as.numeric(levels(cordata$Race))[cordata$Race]
cordata$Sex <- as.numeric(levels(cordata$Sex))[cordata$Sex]
cordata$Marital_Status <- as.numeric(cordata$Marital_Status)
cordata$Mortgage_Credit_History <- as.numeric(levels(cordata$Mortgage_Credit_History))[cordata$Mortgage_Credit_History]
cor(cordata[-c(2)],cordata[c(2)])
hist(Mortgagestats$Loan_Amount, breaks = "fd", xlab = "Loan Amount(Thousands)")
hist(Mortgagestats$Income_Thousands, breaks = "fd", xlab = "Income(Thousands)")
hist(Mortgagestats$Purchase_Price, breaks = "fd", xlab = "Purchase Price(Thousands)")
hist(Mortgagestats$DTI_Housing, breaks = "fd", xlab = "Debt to Income, Housing Debt")
hist(Mortgagestats$DTI_Total, breaks = "fd", xlab = "Debt to Income, Total Debt")
hist(Mortgagestats$School, breaks = "fd",xlab = "Years of Education")
hist((Mortgagestats$Loan_Amount/Mortgagestats$Purchase_Price), breaks = "fd", xlab = "Loan to Purchase Price Ratio", main = "Histogram of Loan Amount to Purchase Price ratio")
attach(Mortgagestats)
#plot(Mortgagestats)
plot(Loan_Amount,Action_Taken, col = "blue", ylab = "Approved(1), Denied(2)",
xlab = "Loan Amount(Thousands)", main = "Approved by Loan Amount")
plot(Race,Action_Taken, col = c("blue","#33B2FF"), ylab = "Approved(1), Denied(0)",
xlab = "White(1), Black(0)", main = "Approved by Race")
plot(Sex,Action_Taken, col = c("blue","#33B2FF"), ylab = "Approved(1), Denied(0)",
xlab = "Male(1), Female(0)", main = "Approved by Applicant's Sex")
plot(Income_Thousands,Action_Taken, col = "blue", ylab = "Approved(1), Denied(2)",
xlab = "Income in Thousands", main = "Approved based on Income")
plot(Marital_Status,Action_Taken, col = c("blue","#33B2FF"), ylab = "Approved(1), Denied(0)",
xlab = "Married(M), Seperated(S), Unmarried(U)", main = "Approved by Marriage Status")
plot(Purchase_Price,Action_Taken, col = "#51CF44",  ylab = "Approved(1), Denied(2)",
xlab = "Purchase Price(Thousands)", main = "Approved based on Purchase Price")
plot(DTI_Housing,Action_Taken, col = "#51CF44",  ylab = "Approved(1), Denied(2)",
xlab = "Housing Debt to Income(DTI) Ratio", main = "Approved based on Housing DTI Ratio")
plot(DTI_Housing,Action_Taken, col = "#51CF44",  ylab = "Approved(1), Denied(2)",
xlab = "Total Debt to Income(DTI) Ratio", main = "Approved based on Total DTI Ratio")
plot(School,Action_Taken, col = "#51CF44",  ylab = "Approved(1), Denied(2)",
xlab = "Purchase Price(Thousands)", main = "Approved by Years of Education")
plot(Mortgage_Credit_History, Action_Taken,col = c("blue","#33B2FF"),
ylab = "Approved(1), Denied(0)",
xlab = "No Late Payments(1), No History(2), Late Payments (3,4)",
main = "Approved based on Mortgage Credit History")
hist(log(Mortgagestats$Income_Thousands), breaks = "fd", xlab = "Income(Thousands)", main = )
hist(log(Mortgagestats$Purchase_Price), breaks = "fd", xlab = "Purchase Price(Thousands)")
hist(sqrt(Mortgagestats$Income_Thousands), breaks = "fd", xlab = "Income(Thousands)")
hist(sqrt(Mortgagestats$Purchase_Price), breaks = "fd", xlab = "Purchase Price(Thousands)")
MFit <- glm(Action_Taken ~ DTI_Housing + DTI_Total + Race + Self_Employed + Marital_Status + School, data = Mortgagestats, family = "binomial")
summary(MFit)
prob <- predict(MFit, Mortgagestats, type = "response")
my_roc <- roc(Mortgagestats$Action_Taken ~ prob, plot = TRUE, print.auc = TRUE)
coords(my_roc, "best", ret = "threshold")
logit.pred <- factor(prob > 0.30, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
logit.perf1 <- table(Mortgagestats$Action_Taken, logit.pred, dnn = c("Actual","Predicted"))
logit.perf1
logit.pred <- factor(prob > 0.5, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
logit.perf2 <- table(Mortgagestats$Action_Taken, logit.pred, dnn = c("Actual","Predicted"))
logit.perf2
logit.pred <- factor(prob > 0.75, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
logit.perf3 <- table(Mortgagestats$Action_Taken, logit.pred, dnn = c("Actual","Predicted"))
logit.perf3
logit.pred <- factor(prob > 0.1268, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
logit.perf4 <- table(Mortgagestats$Action_Taken, logit.pred, dnn = c("Actual","Predicted"))
logit.perf4
performance <- function(table, n = 4){
if(!all(dim(table) == c(2,2)))
stop("Must be a 2 x 2 table")
tn = table[1,1]
fp = table[1,2]
fn = table[2,1]
tp = table[2,2]
sensitivity = tp/(tp+fn)
specificity = tn/(tn+fp)
ppp = tp/(tp+fp)
npp = tn/(tn+fp)
hitrate = (tp+tn)/(tp+tn+fp+fn)
result <- paste0("Sensitivity = ", round(sensitivity,n),
"\nSpecificity = ",round(specificity,n),
"\nPositive Predictive Value = ", round(ppp,n),
"\nNegative Predictive Value = ", round(npp,n),
"\nAccuracy = ", round(hitrate,n))
cat(result)
}
performance(logit.perf1)
performance(logit.perf2)
performance(logit.perf3)
performance(logit.perf4)
set.seed(123)
reg1 <- glm(Action_Taken ~ DTI_Housing + DTI_Total + Race + Self_Employed + Marital_Status +
School, data = Mortgagestats, family = "binomial")
cv.reg1 <- cv.glm(Mortgagestats, reg1, K = 10)$delta[2]
reg2 <- glm(Action_Taken ~ Loan_Amount + Race + Sex + Income_Thousands + Marital_Status +
Self_Employed + Purchase_Price + Mortgage_Credit_History + DTI_Housing +
DTI_Total + School, data = Mortgagestats, family = "binomial")
cv.reg2 <- cv.glm(Mortgagestats, reg2, K = 10)$delta[2]
reg3 <- glm(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex + Income_Thousands +
Marital_Status + Self_Employed + Mortgage_Credit_History + DTI_Housing +
DTI_Total + School, data = Mortgagestats, family = "binomial")
cv.reg3 <- cv.glm(Mortgagestats, reg3, K = 10)$delta[2]
reg4 <- step(reg3)
cv.reg4 <- cv.glm(Mortgagestats, reg4, K = 10)$delta[2]
reg5 <- glm(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex + Income_Thousands +
Marital_Status + Self_Employed + Mortgage_Credit_History +
DTI_Housing + DTI_Total + School + (Income_Thousands)^2,
data = Mortgagestats, family = "binomial")
cv.reg5 <- cv.glm(Mortgagestats, reg5, K = 10)$delta[2]
reg6 <- step(reg5)
cv.reg6 <- cv.glm(Mortgagestats, reg6, K = 10)$delta[2]
cv.reg1
cv.reg2
cv.reg3
cv.reg4
cv.reg5
cv.reg6
prob1 <- predict(reg2, Mortgagestats, type = "response")
Reg1_Roc <- roc(Mortgagestats$Action_Taken ~ prob1)
coords(Reg1_Roc, "best", ret = "threshold")
reg.pred <- factor(prob1 > .136, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
reg.perf1 <- table(Mortgagestats$Action_Taken, reg.pred, dnn = c("Actual","Predicted"))
prob2 <- predict(reg5, Mortgagestats, type = "response")
Reg2_Roc <- roc(Mortgagestats$Action_Taken ~ prob2)
coords(Reg2_Roc, "best", ret = "threshold")
reg.pred <- factor(prob2 > .121, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
reg.perf2 <- table(Mortgagestats$Action_Taken, reg.pred, dnn = c("Actual","Predicted"))
reg.perf2
prob3 <- predict(reg6, Mortgagestats, type = "response")
Reg3_Roc <- roc(Mortgagestats$Action_Taken ~ prob3)
coords(Reg3_Roc, "best", ret = "threshold")
reg.pred <- factor(prob3 > .118, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
reg.perf3 <- table(Mortgagestats$Action_Taken, reg.pred, dnn = c("Actual","Predicted"))
reg.perf3
reg.perf1
reg.perf2
reg.perf3
set.seed(1234)
reg.forest <- randomForest(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex +
Marital_Status + Self_Employed + Mortgage_Credit_History +
DTI_Housing + DTI_Total + School, data=Mortgagestats, importance = TRUE)
reg.forest
importance(reg.forest, type = 2)
forest.pred <- predict(reg.forest, Mortgagestats, type = "response")
forest.perf <- table(Mortgagestats$Action_Taken, forest.pred, dnn = c("Actual","Predicted"))
forest.perf
set.seed(1234)
reg.svm <- svm(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex +
Marital_Status + Self_Employed + Mortgage_Credit_History +
DTI_Housing + DTI_Total + School, data=Mortgagestats)
svm.pred <- predict(reg.svm, Mortgagestats)
svm.perf <- table(Mortgagestats$Action_Taken, svm.pred, dnn = c("Actual","Predicted"))
svm.perf
performance(reg.perf1)
performance(reg.perf2)
performance(reg.perf3)
performance(forest.perf)
performance(svm.perf)
set.seed(1234)
reg.forest <- randomForest(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex +
Marital_Status + Self_Employed + Mortgage_Credit_History +
DTI_Housing + DTI_Total + School, data=Mortgagestats, importance = TRUE)
reg.forest
final.prob <- predict(reg.forest, Mortgagestats, type = "response")
final_roc <- roc(Mortgagestats$Action_Taken ~ final.prob, plot = TRUE, print.auc = TRUE)
final.prob <- predict(reg.forest, Mortgagestats, type = "response")
final.prob <- as.matrix(predict(reg.forest, Mortgagestats, type = "response"))
final_roc <- roc(Mortgagestats$Action_Taken ~ final.prob, plot = TRUE, print.auc = TRUE)
final.prob <- as.numeric(predict(reg.forest, Mortgagestats, type = "response"))
final_roc <- roc(Mortgagestats$Action_Taken ~ final.prob, plot = TRUE, print.auc = TRUE)
final.prob <- as.numeric(predict(reg.forest, Mortgagestats, type = "response"))
final_roc <- roc(Mortgagestats$Action_Taken ~ final.prob, plot = TRUE, print.auc = TRUE)
coords(final_roc, "best", ret = "threshold")
forest.pred <- predict(reg.forest, Mortgagestats, type = "response")
forest.perf <- table(Mortgagestats$Action_Taken, forest.pred, dnn = c("Actual","Predicted"))
forest.perf
final.prob <- as.numeric(predict(reg.forest, Mortgagestats, type = "response"))
final_roc <- roc(Mortgagestats$Action_Taken ~ final.prob, plot = TRUE, print.auc = TRUE)
coords(final_roc, "best", ret = "threshold")
forest.pred <- predict(reg.forest, Mortgagestats, type = "response")
forest.perf <- table(Mortgagestats$Action_Taken, forest.pred, dnn = c("Actual","Predicted"))
forest.perf
forest.perf
final.prob <- as.numeric(predict(reg.forest, Mortgagestats, type = "response"))
final_roc <- roc(Mortgagestats$Action_Taken ~ final.prob, plot = TRUE, print.auc = TRUE)
coords(final_roc, "best", ret = "threshold")
forest.pred <- predict(reg.forest, Mortgagestats, type = "response")
forest.perf <- table(Mortgagestats$Action_Taken, forest.pred, dnn = c("Actual","Predicted"))
forest.perf
performance(reg.forest)
performance(forest.perf)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(pROC)
library(gamlr)
library(boot)
library(randomForest)
library(e1071)
Mortgagestats <- read_csv("Data/hmda_sw.csv",show_col_types = FALSE)
Mortgagestats <- Mortgagestats[c(5,6,9,11,13,20,24,30,36,39,40,59)]
# s6, s7, s13, s15, s17, s23a, s27a, s33,s42, s45, S46, school
Coln = c("Loan_Amount", "Action_Taken", "Race","Sex", "Income_Thousands", "Marital_Status", "Self_Employed", "Purchase_Price", "Mortgage_Credit_History", "DTI_Housing", "DTI_Total", "School")
colnames(Mortgagestats) <- Coln
Mortgagestats[Mortgagestats == 999999.4] <- NA
Mortgagestats <- na.omit(Mortgagestats)
Mortgagestats$Race <- factor(Mortgagestats$Race, levels = c(3,5),labels = c(0,1))
Mortgagestats$Action_Taken <- factor(Mortgagestats$Action_Taken, levels = c(1,2,3), labels = c(1,1,0))
Mortgagestats$Sex <- factor(Mortgagestats$Sex, levels = c(1,2,3), labels = c(1,0,1))
Mortgagestats$Marital_Status <- factor(Mortgagestats$Marital_Status)
Mortgagestats$Mortgage_Credit_History <- factor(Mortgagestats$Mortgage_Credit_History)
Mortgagestats$DTI_Housing <- Mortgagestats$DTI_Housing/100
Mortgagestats$DTI_Total <- Mortgagestats$DTI_Total/100
summary(Mortgagestats)
sd(Mortgagestats$Loan_Amount, na.rm = TRUE)
sd(Mortgagestats$Income_Thousands, na.rm =TRUE)
sd(Mortgagestats$Purchase_Price, na.rm = TRUE)
sd(Mortgagestats$DTI_Housing, na.rm = TRUE)
sd(Mortgagestats$DTI_Total, na.rm = TRUE)
sd(Mortgagestats$School, na.rm = TRUE)
cordata <-Mortgagestats
cordata$Action_Taken <- as.numeric(levels(cordata$Action_Taken))[cordata$Action_Taken]
cordata$Race <- as.numeric(levels(cordata$Race))[cordata$Race]
cordata$Sex <- as.numeric(levels(cordata$Sex))[cordata$Sex]
cordata$Marital_Status <- as.numeric(cordata$Marital_Status)
cordata$Mortgage_Credit_History <- as.numeric(levels(cordata$Mortgage_Credit_History))[cordata$Mortgage_Credit_History]
cor(cordata[-c(2)],cordata[c(2)])
hist(Mortgagestats$Loan_Amount, breaks = "fd", xlab = "Loan Amount(Thousands)")
hist(Mortgagestats$Income_Thousands, breaks = "fd", xlab = "Income(Thousands)")
hist(Mortgagestats$Purchase_Price, breaks = "fd", xlab = "Purchase Price(Thousands)")
hist(Mortgagestats$DTI_Housing, breaks = "fd", xlab = "Debt to Income, Housing Debt")
hist(Mortgagestats$DTI_Total, breaks = "fd", xlab = "Debt to Income, Total Debt")
hist(Mortgagestats$School, breaks = "fd",xlab = "Years of Education")
hist((Mortgagestats$Loan_Amount/Mortgagestats$Purchase_Price), breaks = "fd", xlab = "Loan to Purchase Price Ratio", main = "Histogram of Loan Amount to Purchase Price ratio")
attach(Mortgagestats)
#plot(Mortgagestats)
plot(Loan_Amount,Action_Taken, col = "blue", ylab = "Approved(1), Denied(2)",
xlab = "Loan Amount(Thousands)", main = "Approved by Loan Amount")
plot(Race,Action_Taken, col = c("blue","#33B2FF"), ylab = "Approved(1), Denied(0)",
xlab = "White(1), Black(0)", main = "Approved by Race")
plot(Sex,Action_Taken, col = c("blue","#33B2FF"), ylab = "Approved(1), Denied(0)",
xlab = "Male(1), Female(0)", main = "Approved by Applicant's Sex")
plot(Income_Thousands,Action_Taken, col = "blue", ylab = "Approved(1), Denied(2)",
xlab = "Income in Thousands", main = "Approved based on Income")
plot(Marital_Status,Action_Taken, col = c("blue","#33B2FF"), ylab = "Approved(1), Denied(0)",
xlab = "Married(M), Seperated(S), Unmarried(U)", main = "Approved by Marriage Status")
plot(Purchase_Price,Action_Taken, col = "#51CF44",  ylab = "Approved(1), Denied(2)",
xlab = "Purchase Price(Thousands)", main = "Approved based on Purchase Price")
plot(DTI_Housing,Action_Taken, col = "#51CF44",  ylab = "Approved(1), Denied(2)",
xlab = "Housing Debt to Income(DTI) Ratio", main = "Approved based on Housing DTI Ratio")
plot(DTI_Housing,Action_Taken, col = "#51CF44",  ylab = "Approved(1), Denied(2)",
xlab = "Total Debt to Income(DTI) Ratio", main = "Approved based on Total DTI Ratio")
plot(School,Action_Taken, col = "#51CF44",  ylab = "Approved(1), Denied(2)",
xlab = "Purchase Price(Thousands)", main = "Approved by Years of Education")
plot(Mortgage_Credit_History, Action_Taken,col = c("blue","#33B2FF"),
ylab = "Approved(1), Denied(0)",
xlab = "No Late Payments(1), No History(2), Late Payments (3,4)",
main = "Approved based on Mortgage Credit History")
hist(log(Mortgagestats$Income_Thousands), breaks = "fd", xlab = "Income(Thousands)", main = )
hist(log(Mortgagestats$Purchase_Price), breaks = "fd", xlab = "Purchase Price(Thousands)")
hist(sqrt(Mortgagestats$Income_Thousands), breaks = "fd", xlab = "Income(Thousands)")
hist(sqrt(Mortgagestats$Purchase_Price), breaks = "fd", xlab = "Purchase Price(Thousands)")
MFit <- glm(Action_Taken ~ DTI_Housing + DTI_Total + Race + Self_Employed + Marital_Status + School, data = Mortgagestats, family = "binomial")
summary(MFit)
prob <- predict(MFit, Mortgagestats, type = "response")
my_roc <- roc(Mortgagestats$Action_Taken ~ prob, plot = TRUE, print.auc = TRUE)
coords(my_roc, "best", ret = "threshold")
logit.pred <- factor(prob > 0.30, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
logit.perf1 <- table(Mortgagestats$Action_Taken, logit.pred, dnn = c("Actual","Predicted"))
logit.perf1
logit.pred <- factor(prob > 0.5, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
logit.perf2 <- table(Mortgagestats$Action_Taken, logit.pred, dnn = c("Actual","Predicted"))
logit.perf2
logit.pred <- factor(prob > 0.75, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
logit.perf3 <- table(Mortgagestats$Action_Taken, logit.pred, dnn = c("Actual","Predicted"))
logit.perf3
logit.pred <- factor(prob > 0.1268, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
logit.perf4 <- table(Mortgagestats$Action_Taken, logit.pred, dnn = c("Actual","Predicted"))
logit.perf4
performance <- function(table, n = 4){
if(!all(dim(table) == c(2,2)))
stop("Must be a 2 x 2 table")
tn = table[1,1]
fp = table[1,2]
fn = table[2,1]
tp = table[2,2]
sensitivity = tp/(tp+fn)
specificity = tn/(tn+fp)
ppp = tp/(tp+fp)
npp = tn/(tn+fp)
hitrate = (tp+tn)/(tp+tn+fp+fn)
result <- paste0("Sensitivity = ", round(sensitivity,n),
"\nSpecificity = ",round(specificity,n),
"\nPositive Predictive Value = ", round(ppp,n),
"\nNegative Predictive Value = ", round(npp,n),
"\nAccuracy = ", round(hitrate,n))
cat(result)
}
performance(logit.perf1)
performance(logit.perf2)
performance(logit.perf3)
performance(logit.perf4)
set.seed(123)
reg1 <- glm(Action_Taken ~ DTI_Housing + DTI_Total + Race + Self_Employed + Marital_Status +
School, data = Mortgagestats, family = "binomial")
cv.reg1 <- cv.glm(Mortgagestats, reg1, K = 10)$delta[2]
reg2 <- glm(Action_Taken ~ Loan_Amount + Race + Sex + Income_Thousands + Marital_Status +
Self_Employed + Purchase_Price + Mortgage_Credit_History + DTI_Housing +
DTI_Total + School, data = Mortgagestats, family = "binomial")
cv.reg2 <- cv.glm(Mortgagestats, reg2, K = 10)$delta[2]
reg3 <- glm(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex + Income_Thousands +
Marital_Status + Self_Employed + Mortgage_Credit_History + DTI_Housing +
DTI_Total + School, data = Mortgagestats, family = "binomial")
cv.reg3 <- cv.glm(Mortgagestats, reg3, K = 10)$delta[2]
reg4 <- step(reg3)
cv.reg4 <- cv.glm(Mortgagestats, reg4, K = 10)$delta[2]
reg5 <- glm(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex + Income_Thousands +
Marital_Status + Self_Employed + Mortgage_Credit_History +
DTI_Housing + DTI_Total + School + (Income_Thousands)^2,
data = Mortgagestats, family = "binomial")
cv.reg5 <- cv.glm(Mortgagestats, reg5, K = 10)$delta[2]
reg6 <- step(reg5)
cv.reg6 <- cv.glm(Mortgagestats, reg6, K = 10)$delta[2]
cv.reg1
cv.reg2
cv.reg3
cv.reg4
cv.reg5
cv.reg6
prob1 <- predict(reg2, Mortgagestats, type = "response")
Reg1_Roc <- roc(Mortgagestats$Action_Taken ~ prob1)
coords(Reg1_Roc, "best", ret = "threshold")
reg.pred <- factor(prob1 > .136, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
reg.perf1 <- table(Mortgagestats$Action_Taken, reg.pred, dnn = c("Actual","Predicted"))
prob2 <- predict(reg5, Mortgagestats, type = "response")
Reg2_Roc <- roc(Mortgagestats$Action_Taken ~ prob2)
coords(Reg2_Roc, "best", ret = "threshold")
reg.pred <- factor(prob2 > .121, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
reg.perf2 <- table(Mortgagestats$Action_Taken, reg.pred, dnn = c("Actual","Predicted"))
reg.perf2
prob3 <- predict(reg6, Mortgagestats, type = "response")
Reg3_Roc <- roc(Mortgagestats$Action_Taken ~ prob3)
coords(Reg3_Roc, "best", ret = "threshold")
reg.pred <- factor(prob3 > .118, levels = c(FALSE,TRUE),
labels = c("Approved","Denied"))
reg.perf3 <- table(Mortgagestats$Action_Taken, reg.pred, dnn = c("Actual","Predicted"))
reg.perf3
reg.perf1
reg.perf2
reg.perf3
set.seed(1234)
reg.forest <- randomForest(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex +
Marital_Status + Self_Employed + Mortgage_Credit_History +
DTI_Housing + DTI_Total + School, data=Mortgagestats, importance = TRUE)
reg.forest
importance(reg.forest, type = 2)
forest.pred <- predict(reg.forest, Mortgagestats, type = "response")
forest.perf <- table(Mortgagestats$Action_Taken, forest.pred, dnn = c("Actual","Predicted"))
forest.perf
set.seed(1234)
reg.svm <- svm(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex +
Marital_Status + Self_Employed + Mortgage_Credit_History +
DTI_Housing + DTI_Total + School, data=Mortgagestats)
svm.pred <- predict(reg.svm, Mortgagestats)
svm.perf <- table(Mortgagestats$Action_Taken, svm.pred, dnn = c("Actual","Predicted"))
svm.perf
performance(reg.perf1)
performance(reg.perf2)
performance(reg.perf3)
performance(forest.perf)
performance(svm.perf)
set.seed(1234)
reg.forest <- randomForest(Action_Taken ~ (Loan_Amount/Purchase_Price) + Race + Sex +
Marital_Status + Self_Employed + Mortgage_Credit_History +
DTI_Housing + DTI_Total + School, data=Mortgagestats, importance = TRUE)
reg.forest
final.prob <- as.numeric(predict(reg.forest, Mortgagestats, type = "response"))
final_roc <- roc(Mortgagestats$Action_Taken ~ final.prob, plot = TRUE, print.auc = TRUE)
coords(final_roc, "best", ret = "threshold")
forest.pred <- predict(reg.forest, Mortgagestats, type = "response")
forest.perf <- table(Mortgagestats$Action_Taken, forest.pred, dnn = c("Actual","Predicted"))
forest.perf
forest.perf
performance(forest.perf)
attach(Mortgagestats)
plot(Mortgagestats)
plot(Loan_Amount,Action_Taken, col = "#51CF44", ylab = "Approved(1), Denied(2)",
xlab = "Loan Amount(Thousands)", main = "Approved by Loan Amount")
plot(Race,Action_Taken, col = c("blue","#33B2FF"), ylab = "Approved(1), Denied(0)",
xlab = "White(1), Black(0)", main = "Approved by Race")
plot(Sex,Action_Taken, col = c("blue","#33B2FF"), ylab = "Approved(1), Denied(0)",
xlab = "Male(1), Female(0)", main = "Approved by Applicant's Sex")
plot(Income_Thousands,Action_Taken, col = "#51CF44", ylab = "Approved(1), Denied(2)",
xlab = "Income in Thousands", main = "Approved based on Income")
plot(Marital_Status,Action_Taken, col = c("blue","#33B2FF"), ylab = "Approved(1), Denied(0)",
xlab = "Married(M), Seperated(S), Unmarried(U)", main = "Approved by Marriage Status")
plot(Purchase_Price,Action_Taken, col = "#51CF44",  ylab = "Approved(1), Denied(2)",
xlab = "Purchase Price(Thousands)", main = "Approved based on Purchase Price")
plot(DTI_Housing,Action_Taken, col = "#51CF44",  ylab = "Approved(1), Denied(2)",
xlab = "Housing Debt to Income(DTI) Ratio", main = "Approved based on Housing DTI Ratio")
plot(DTI_Housing,Action_Taken, col = "#51CF44",  ylab = "Approved(1), Denied(2)",
xlab = "Total Debt to Income(DTI) Ratio", main = "Approved based on Total DTI Ratio")
plot(School,Action_Taken, col = "#51CF44",  ylab = "Approved(1), Denied(2)",
xlab = "Purchase Price(Thousands)", main = "Approved by Years of Education")
plot(Mortgage_Credit_History, Action_Taken,col = c("blue","#33B2FF"),
ylab = "Approved(1), Denied(0)",
xlab = "No Late Payments(1), No History(2), Late Payments (3,4)",
main = "Approved based on Mortgage Credit History")
