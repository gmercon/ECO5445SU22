knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(gvlma)
library(MASS)
library(leaps)
library(car)
prop_prices_reduced <- read_csv("~/GitHub/ECO5445SU22/Assignment06/data/prop_prices_reduced.csv")
View(prop_prices_reduced)
prop_prices_reduced$sale_def <- prop_prices_reduced$sale_def/1000
attach(prop_prices_reduced)
View(prop_prices_reduced)
prop_prices_reduced <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv")
View(prop_prices_reduced)
prop_prices_reduced$sale_def <- prop_prices_reduced$sale_def/1000
attach(prop_prices_reduced)
set.seed()
Data_subset <- sample(nrow(prop_prices_reduced), .9*nrow(df))
Data_subset <- sample(nrow(housing), .9*nrow(housing))
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv")
View(prop_prices_reduced)
prop_prices_reduced$sale_def <- prop_prices_reduced$sale_def/1000
attach(prop_prices_reduced)
set.seed(1234)
Data_subset <- sample(nrow(housing), .9*nrow(housing))
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
newfit2 <-  lm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training)
summary(newfit2)
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv")
View(prop_prices_reduced)
prop_prices_reduced$sale_def <- prop_prices_reduced$sale_def/1000
housing$dist_lakes <- housing$dist_lakes/mean(housing$dist_lakes)
attach(housing)
set.seed(1234)
Data_subset <- sample(nrow(housing), .9*nrow(housing))
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
newfit2 <-  lm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training)
summary(newfit2)
newfit2 <-  glm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training, family = "binomial")
newfit2 <-  glm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training)
summary(newfit2)
newfit2 <-  lm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training)
summary(newfit2)
props <-predict(newfit2, housing.validate, type = "response")
length(props)
length(probs)
probs <-predict(newfit2, housing.validate, type = "response")
length(probs)
spender <- gamlr(housing.training[-c(1)], housing.training[c(1)], verb=TRUE)
library(readr)
library(gvlma)
library(MASS)
library(leaps)
library(car)
library(gamlr)
library(pROC)
library(rpart)
library(rpart.plot)
library(party)
library(randomForest)
library(e1071)
housing.factors <- housing.training$bed
prices <- housing$sale_def
spender <- gamlr(housing.training[-c(1)], housing.training[c(1)], verb=TRUE)
summary(spender)
plot(spender) ## path plot
View(housing)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
spender <- gamlr(housing.x, housing.y, verb=TRUE)
summary(spender)
plot(spender) ## path plot
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv")
View(housing)
housing$sale_def <- housing$sale_def/1000
housing$dist_lakes <- housing$dist_lakes/mean(housing$dist_lakes)
attach(housing)
set.seed(1234)
Data_subset <- sample(nrow(housing), .9*nrow(housing))
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
spender <- gamlr(housing.x, housing.y, verb=TRUE)
summary(spender)
plot(spender) ## path plot
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender) ## path plot
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- as.matrix(housing.x)
housing.y <- as.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender) ## path plot
?factor
housing$pool <- factor(housing$pool)
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv")
housing$sale_def <- housing$sale_def/1000
housing$dist_lakes <- housing$dist_lakes/mean(housing$dist_lakes)
housing$pool <- factor(housing$pool)
attach(housing)
set.seed(1234)
Data_subset <- sample(nrow(housing), .9*nrow(housing))
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
newfit2 <-  lm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training)
summary(newfit2)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- as.matrix(housing.x)
housing.y <- as.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv")
housing$sale_def <- housing$sale_def/1000
housing$dist_lakes <- housing$dist_lakes/mean(housing$dist_lakes)
housing$pool <- factor(housing$pool, levels = 2)
attach(housing)
set.seed(1234)
Data_subset <- sample(nrow(housing), .9*nrow(housing))
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
newfit2 <-  lm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training)
newfit2 <-  lm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training)
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv")
housing$sale_def <- housing$sale_def/1000
housing$dist_lakes <- housing$dist_lakes/mean(housing$dist_lakes)
housing$pool <- factor(housing$pool, levels = 1:length(x))
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv")
housing$sale_def <- housing$sale_def/1000
housing$dist_lakes <- housing$dist_lakes/mean(housing$dist_lakes)
housing$pool <- factor(housing$pool, levels = 1:length(housing$pool))
attach(housing)
set.seed(1234)
Data_subset <- sample(nrow(housing), .9*nrow(housing))
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
newfit2 <-  lm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training)
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv")
housing$sale_def <- housing$sale_def/1000
housing$dist_lakes <- housing$dist_lakes/mean(housing$dist_lakes)
attach(housing)
set.seed(1234)
Data_subset <- sample(nrow(housing), .9*nrow(housing))
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
newfit2 <-  lm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training)
summary(newfit2)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- as.matrix(housing.x)
housing.y <- as.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender) ## path plot
?plot
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- as.matrix(housing.x)
housing.y <- as.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender, ylim = (5,5))
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- as.matrix(housing.x)
housing.y <- as.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender, ylim = c(-5, 5))
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- as.matrix(housing.x)
housing.y <- as.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender, ylim = c(-.5, .5))
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- as.matrix(housing.x)
housing.y <- as.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender, ylim = c(-.2, .2))
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- as.matrix(housing.x)
housing.y <- as.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender, ylim = c(-.05, .15))
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- as.matrix(housing.x)
housing.y <- as.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender, ylim = c(-.025, .15))
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- as.matrix(housing.x)
housing.y <- as.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender, ylim = c(-.04, .15))
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- as.matrix(housing.x)
housing.y <- as.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender, ylim = c(-.05, .15))
type(housing)
typeof(housing)
typeof(housing.y)
typeof(prop_prices_reduced)
str(housing.y)
str(housing.x)
View(housing.x)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- data.matrix(housing.x)
housing.y <- data.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender, ylim = c(-.05, .15))
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- data.matrix(housing.x)
housing.y <- data.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE)
summary(spender)
plot(spender, ylim = c(-.05, .15))
spender <- gamlr(housing.x, log(housing.y), verb=TRUE, standardize = FALSE)
summary(spender)
plot(spender, ylim = c(-.05, .15))
spender <- gamlr(housing.x, log(housing.y), verb=TRUE, standardize = TRUE)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- data.matrix(housing.x)
housing.y <- data.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE, standardize = TRUE)
summary(spender)
plot(spender, ylim = c(-.05, .15))
Baicc <- coef(newfit2)[colnames(area)]
Baicc <- spender(newfit2)[colnames(area)]
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- data.matrix(housing.x)
housing.y <- data.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE, standardize = TRUE)
summary(spender)
plot(spender, ylim = c(-.05, .15))
spender <- gamlr(housing.x, log(housing.y), verb=TRUE, standardize = TRUE)
Baicc <- coef(spender)[colnames(area)]
Baicc <- coef(spender)[colnames(area),]
housing.x <- housing.training[-c(1)]
housing.x <- data.matrix(housing.x)
housing.y <- housing.training[c(1)]
housing.x <- housing.training[-c(1)]
spender <- gamlr(housing.x, log(housing.y), verb=TRUE, standardize = TRUE)
summary(spender)
plot(spender, ylim = c(-.05, .15))
Baicc <- coef(spender)[colnames(area),]
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv")
housing$sale_def <- housing$sale_def/1000
housing$dist_lakes <- housing$dist_lakes/mean(housing$dist_lakes)
attach(housing)
set.seed(1234)
Data_subset <- sample(nrow(housing), .9*nrow(housing))
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
newfit2 <-  lm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training)
summary(newfit2)
View(housing.y)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- data.matrix(housing.x)
housing.y <- data.matrix(housing.y)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- data.matrix(housing.x)
housing.y <- data.matrix(housing.y)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
typeof(housing.x)
typeof(housing.y)
housing.x <- data.matrix(housing.x)
housing.y <- data.matrix(housing.y)
typeof(housing.x)
typeof(housing.y)
class(housing.x)
class(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE, standardize = TRUE)
summary(spender)
plot(spender, ylim = c(-.05, .15))
library(readr)
library(gvlma)
library(MASS)
library(leaps)
library(car)
library(gamlr)
library(pROC)
library(rpart)
library(rpart.plot)
library(party)
library(randomForest)
library(e1071)
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv")
housing$sale_def <- housing$sale_def/1000
housing$dist_lakes <- housing$dist_lakes/mean(housing$dist_lakes)
attach(housing)
set.seed(1234)
Data_subset <- sample(nrow(housing), .9*nrow(housing))
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
housing <- ?read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv")
?read_csv
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv", col_names = TRUE)
View(housing)
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv", col_names = TRUE)
housing$sale_def <- housing$sale_def/1000
housing$dist_lakes <- housing$dist_lakes/mean(housing$dist_lakes)
attach(housing)
set.seed(1234)
Data_subset <- sample(nrow(housing), .9*nrow(housing))
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
newfit2 <-  lm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training)
summary(newfit2)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x <- data.matrix(housing.x)
housing.y <- data.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE, standardize = TRUE)
summary(spender)
plot(spender, ylim = c(-.05, .15))
Baicc <- coef(spender)[colnames(area),]
exp(coef(spender)[1])
?gamlr
View(housing.x)
spender <- gamlr(housing.x[-c(6)]+log(housing.x[c(6)]), log(housing.y), verb=TRUE, family = "gaussian", standardize = TRUE)
View(housing.x)
spender <- gamlr(housing.x[-c(6),]+log(housing.x[c(6),]), log(housing.y), verb=TRUE, family = "gaussian", standardize = TRUE)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x$dist_lakes <- log(housing.x$dist_lakes)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x$dist_lakes <- log(housing.x$dist_lakes)
housing.x <- data.matrix(housing.x)
housing.y <- data.matrix(housing.y)
spender <- gamlr(housing.x[-c(6),]+log(housing.x[c(6),]), log(housing.y), verb=TRUE, family = "gaussian", standardize = TRUE)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x$dist_lakes <- log(housing.x$dist_lakes)
housing.x <- data.matrix(housing.x)
housing.y <- data.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE, family = "gaussian", standardize = TRUE)
summary(spender)
plot(spender, ylim = c(-.05, .15))
plot(spender, ylim = c(-.05, .15), xlim = c(-7,-1))
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x$dist_lakes <- log(housing.x$dist_lakes)
housing.x <- data.matrix(housing.x)
housing.y <- data.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE, family = "gaussian", standardize = TRUE)
summary(spender)
plot(spender, ylim = c(-.05, .15), xlim = c(-6,-1))
cv.housing <- cv.gamlr(housing.x, housing.y,
family="gaussian", verb=TRUE, standardize=TRUE)
?cv.gamlr
cv.housing <- cv.gamlr(housing.x, housing.y,
family="gaussian", verb=TRUE, standardize=TRUE, nfold = 10)
par(mfrow=c(1,2))
plot(cv.housing)
plot(cv.housing$gamlr) ## cv.gamlr has included a gamlr object into cv.nhlreg
cv.housing <- cv.gamlr(housing.x, log(housing.y),
family="gaussian", verb=TRUE, standardize=TRUE, nfold = 10)
par(mfrow=c(1,2))
plot(cv.housing)
plot(cv.housing$gamlr) ## cv.gamlr has included a gamlr object into cv.nhlreg
Aicc <- coef(spender)
View(Aicc)
View(Aicc)
Aicc
exp(coef(spender))
Aicc <- coef(spender)
exp(coef(spender))
exp(coef(spender)[1])
Aicc <- coef(spender)
exp(coef(spender)[1])
exp(coef(spender))
sum()(Aicc!=0)
sum(Aicc!=0)
Aicc[order(Aicc, decreasing = TRUE)[1:10]]
Aicc[order(Aicc, decreasing = TRUE)]
Aicc <- coef(spender)
Aicc
exp(coef(spender))
sum(Aicc!=0)
Aicc[order(Aicc, decreasing = TRUE)]
log(spender$lambda[which.min(AICc(spender))])
log(spender$lambda[which.min(AIC(spender))])
log(spender$lambda[which.min(BIC(spender))])
log(cv.spender$lambda.min)
cv.spender <- cv.gamlr(housing.x, log(housing.y),
family="gaussian", verb=TRUE, standardize=TRUE, nfold = 10)
par(mfrow=c(1,2))
plot(cv.housing)
plot(cv.housing$gamlr) ## cv.gamlr has included a gamlr object into cv.nhlreg
log(spender$lambda[which.min(AICc(spender))])
log(spender$lambda[which.min(AIC(spender))])
log(spender$lambda[which.min(BIC(spender))])
log(cv.spender$lambda.min)
log(cv.spender$lambda.1se)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(gvlma)
library(MASS)
library(leaps)
library(car)
library(gamlr)
library(pROC)
library(rpart)
library(rpart.plot)
library(party)
library(randomForest)
library(e1071)
housing <- read_csv("~/GitHub/ECO5445SU22/Assignment07/data/prop_prices_reduced.csv", col_names = TRUE)
housing$sale_def <- housing$sale_def/1000
housing$dist_lakes <- housing$dist_lakes/mean(housing$dist_lakes)
attach(housing)
set.seed(1234)
Data_subset <- sample(nrow(housing), .9*nrow(housing))
housing.training <- housing[Data_subset,]
housing.validate <- housing[-Data_subset,]
View(housing)
newfit2 <-  lm(log(sale_def) ~ bed + bath + area_heated + area + dist_cbd + log(dist_lakes) + pool, data = housing.training)
summary(newfit2)
housing.x <- housing.training[-c(1)]
housing.y <- housing.training[c(1)]
housing.x$dist_lakes <- log(housing.x$dist_lakes)
housing.x <- data.matrix(housing.x)
housing.y <- data.matrix(housing.y)
spender <- gamlr(housing.x, log(housing.y), verb=TRUE, family = "gaussian", standardize = TRUE)
summary(spender)
plot(spender, ylim = c(-.05, .15), xlim = c(-6,-1))
cv.spender <- cv.gamlr(housing.x, log(housing.y),
family="gaussian", verb=TRUE, standardize=TRUE, nfold = 10)
par(mfrow=c(1,2))
plot(cv.housing)
Aicc <- coef(spender)
Aicc
exp(coef(spender))
sum(Aicc!=0)
Aicc[order(Aicc, decreasing = TRUE)]
log(spender$lambda[which.min(AICc(spender))])
log(spender$lambda[which.min(AIC(spender))])
log(spender$lambda[which.min(BIC(spender))])
log(cv.spender$lambda.min)
log(cv.spender$lambda.1se)
par(mfrow=c(1,2))
plot(cv.spender)
plot(cv.spender$gamlr) ## cv.gamlr has included a gamlr object into cv.nhlreg
